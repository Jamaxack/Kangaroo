language: minimal
os:
  - linux
dist: bionic
services:
  - mongodb
  - docker
  - rabbitmq
  - elasticsearch
env:
  global:
    - CLOUDSDK_CORE_DISABLE_PROMPTS=1
before_install:
  - wget -qO - https://www.mongodb.org/static/pgp/server-4.2.asc | sudo apt-key add -
  - echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu bionic/mongodb-org/4.2 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-4.2.list
  - sudo apt-get update
  - sudo apt-get install -y mongodb-org
  - sleep 15 #mongo may not be responded directly. See http://docs.travis-ci.com/user/database-setup/#MongoDB
  - mongo --version
  - sudo systemctl start mongod
  - openssl aes-256-cbc -K $encrypted_0f361fdb1767_key -iv $encrypted_0f361fdb1767_iv -in google-service-account.json.enc -out google-service-account.json -d
  - curl https://sdk.cloud.google.com | bash > /dev/null;
  - source $HOME/google-cloud-sdk/path.bash.inc
  - gcloud components update kubectl
  - gcloud auth activate-service-account --key-file google-service-account.json
  - gcloud config set project kangaroo-278818
  - gcloud config set compute/zone us-central1-c
  - gcloud container clusters get-credentials kangaroocluster
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_ID" --password-stdin
  - docker build --target unittest -t jamaxack/deliveryapiunittest -f src/Services/Delivery/Delivery.API/Dockerfile .
  - docker build --target unittest -t jamaxack/courierapiunittest -f src/Services/Courier/Courier.API/Dockerfile .
  - docker build --target unittest -t jamaxack/pricingapiunittest -f src/Services/Pricing/Pricing.API/Dockerfile .
  - docker build --target functionaltest -t jamaxack/courierapifunctionaltest -f src/Services/Courier/Courier.API/Dockerfile .

addons:
  apt:
    update: true

#ElasticSearch and MongoDB takes few seconds to start, to make sure it is available when the build script runs
before_script:
  - sleep 15

script:
  - docker run jamaxack/deliveryapiunittest
  - docker run jamaxack/courierapiunittest
  - docker run jamaxack/pricingapiunittest
  - docker run jamaxack/courierapifunctionaltest

deploy:
  provider: script
  script: bash ./deploy.sh
  on:
    branch: master
