version: '3.4'

services:
  sqldata:
    image: mcr.microsoft.com/mssql/server:2017-latest
    environment:
      - SA_PASSWORD=Pass@word
      - ACCEPT_EULA=Y
    ports:
      - "1433:1433"     # Important: In a production environment remove external port
    volumes:
      - kangaroo-sqldata:/var/opt/mssql
    networks:
      - backend
  nosqldata:
    image: mongo
    ports:
      - "27017:27017"   # Important: In a production environment remove external port
    volumes:
      - kangaroo-nosqldata:/data/db
    networks:
      - backend
  pricingdata:
    image: redis:alpine
    ports:
      - "6379:6379"   # Important: In a production environment remove external port
    volumes:
      - kangaroo-pricingdata:/data
    networks:
      - backend
  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - "15672:15672"   # Important: In a production environment remove external port
      - "5672:5672"     # Important: In a production environment remove external port
    networks:
      - backend
  elasticsearch:
    image: elasticsearch:7.7.1
    volumes:
      - kangaroo-elasticsearchdata:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"    # Important: In a production environment remove external port
    environment:
      - xpack.monitoring.enabled=true
      - xpack.watcher.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
    networks:
      - backend
  kibana:
    image: kibana:7.7.1
    ports:
      - "5601:5601"    # Important: In a production environment remove external port
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - SERVER_BASEPATH=/kibana
    depends_on:
      - elasticsearch
    networks:
      - backend
  nginx-apigateway:
    image: jamaxack/nginx
    build:
      context: ./src/ApiGateways/Nginx
      dockerfile: Dockerfile
    restart: always
    networks:
      - backend
    ports:
      - '3050:80'
    depends_on:
      - delivery-api
      - courier-api
  delivery-api:
    image: jamaxack/deliveryapi
    build:
      context: .
      dockerfile: src/Services/Delivery/Delivery.API/Dockerfile
    restart: on-failure
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:80
      - ConnectionString=Server=sqldata;Database=Kangaroo.Services.Delivery;User Id=sa;Password=Pass@word
      - EventBusConnection=rabbitmq
      - PATH_BASE=/delivery
      - PORT=80
      - GRPC_PORT=81
      - ElasticUri=http://elasticsearch:9200
    networks:
      - backend
    depends_on:
      - sqldata
      - rabbitmq
  courier-api:
    image: jamaxack/courierapi
    build:
      context: .
      dockerfile: src/Services/Courier/Courier.API/Dockerfile
    restart: on-failure
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - urls__delivery=http://delivery-api
      - urls__grpcDelivery=http://delivery-api:81
      - ASPNETCORE_URLS=http://0.0.0.0:80
      - ConnectionString=mongodb://nosqldata
      - Database=CouriersDb 
      - EventBusConnection=rabbitmq
      - PATH_BASE=/courier
      - ElasticUri=http://elasticsearch:9200
    networks:
      - backend
    depends_on:
      - nosqldata
      - rabbitmq
  pricing-api:
    image: jamaxack/pricingapi
    build:
      context: .
      dockerfile: src/Services/Pricing/Pricing.API/Dockerfile
    restart: on-failure
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://0.0.0.0:80
      - ConnectionString=pricingdata
      - PATH_BASE=/pricing
      - ElasticUri=http://elasticsearch:9200
    networks:
      - backend
    depends_on:
      - pricingdata

networks:
  backend:

volumes:
  kangaroo-sqldata:
    external: false
  kangaroo-nosqldata:
    external: false
  kangaroo-pricingdata:
    external: false
  kangaroo-elasticsearchdata:
    external: false
