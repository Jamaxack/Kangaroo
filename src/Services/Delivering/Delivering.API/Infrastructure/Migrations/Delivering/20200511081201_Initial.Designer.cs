// <auto-generated />
using System;
using Delivering.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Delivering.API.Infrastructure.Migrations.Delivering
{
    [DbContext(typeof(DeliveringContext))]
    [Migration("20200511081201_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Delivering.Domain.AggregatesModel.ClientAggregate.Client", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clients","Delivering");
                });

            modelBuilder.Entity("Delivering.Domain.AggregatesModel.DeliveryAggregate.Delivery", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FinishedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Number")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<short>("Weight")
                        .HasColumnType("smallint");

                    b.Property<Guid>("_clientId")
                        .HasColumnName("ClientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("_courierId")
                        .HasColumnName("CourierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("_deliveryStatusId")
                        .HasColumnName("DeliveryStatusId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("_clientId");

                    b.HasIndex("_deliveryStatusId");

                    b.ToTable("Deliveries","Delivering");
                });

            modelBuilder.Entity("Delivering.Domain.AggregatesModel.DeliveryAggregate.DeliveryStatus", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("DeliveryStatus","Delivering");
                });

            modelBuilder.Entity("Delivering.Infrastructure.Idempotency.ClientRequest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Requests","Delivering");
                });

            modelBuilder.Entity("Delivering.Domain.AggregatesModel.DeliveryAggregate.Delivery", b =>
                {
                    b.HasOne("Delivering.Domain.AggregatesModel.ClientAggregate.Client", null)
                        .WithMany()
                        .HasForeignKey("_clientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Delivering.Domain.AggregatesModel.DeliveryAggregate.DeliveryStatus", "DeliveryStatus")
                        .WithMany()
                        .HasForeignKey("_deliveryStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Delivering.Domain.AggregatesModel.DeliveryAggregate.DeliveryLocation", "DropOffLocation", b1 =>
                        {
                            b1.Property<Guid>("DeliveryId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Address")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("ApartmentNumber")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime?>("ArrivalFinishDateTime")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime?>("ArrivalStartDateTime")
                                .HasColumnType("datetime2");

                            b1.Property<string>("BuildingNumber")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime?>("CourierArrivedDateTime")
                                .HasColumnType("datetime2");

                            b1.Property<string>("EntranceNumber")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("FloorNumber")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<double>("Latitude")
                                .HasColumnType("float");

                            b1.Property<double>("Longitude")
                                .HasColumnType("float");

                            b1.Property<string>("Note")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("DeliveryId");

                            b1.ToTable("Deliveries");

                            b1.WithOwner()
                                .HasForeignKey("DeliveryId");

                            b1.OwnsOne("Delivering.Domain.AggregatesModel.DeliveryAggregate.ContactPerson", "ContactPerson", b2 =>
                                {
                                    b2.Property<Guid>("DeliveryLocationDeliveryId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<string>("Name")
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Phone")
                                        .HasColumnType("nvarchar(max)");

                                    b2.HasKey("DeliveryLocationDeliveryId");

                                    b2.ToTable("Deliveries");

                                    b2.WithOwner()
                                        .HasForeignKey("DeliveryLocationDeliveryId");
                                });
                        });

                    b.OwnsOne("Delivering.Domain.AggregatesModel.DeliveryAggregate.DeliveryLocation", "PickUpLocation", b1 =>
                        {
                            b1.Property<Guid>("DeliveryId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Address")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("ApartmentNumber")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime?>("ArrivalFinishDateTime")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime?>("ArrivalStartDateTime")
                                .HasColumnType("datetime2");

                            b1.Property<string>("BuildingNumber")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime?>("CourierArrivedDateTime")
                                .HasColumnType("datetime2");

                            b1.Property<string>("EntranceNumber")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("FloorNumber")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<double>("Latitude")
                                .HasColumnType("float");

                            b1.Property<double>("Longitude")
                                .HasColumnType("float");

                            b1.Property<string>("Note")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("DeliveryId");

                            b1.ToTable("Deliveries");

                            b1.WithOwner()
                                .HasForeignKey("DeliveryId");

                            b1.OwnsOne("Delivering.Domain.AggregatesModel.DeliveryAggregate.ContactPerson", "ContactPerson", b2 =>
                                {
                                    b2.Property<Guid>("DeliveryLocationDeliveryId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<string>("Name")
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Phone")
                                        .HasColumnType("nvarchar(max)");

                                    b2.HasKey("DeliveryLocationDeliveryId");

                                    b2.ToTable("Deliveries");

                                    b2.WithOwner()
                                        .HasForeignKey("DeliveryLocationDeliveryId");
                                });
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
