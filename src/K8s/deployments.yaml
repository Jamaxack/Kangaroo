apiVersion: apps/v1
kind: Deployment
metadata:
  name: courier-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      component: courierapi
  template:
    metadata:
      labels:
        component: courierapi
    spec:
      containers:
        - name: courierapi
          image: jamaxack/courierapi
          ports:
            - containerPort: 80
          env:
            - name: ASPNETCORE_ENVIRONMENT
              value: Development
            - name: urls__delivery
              value: delivery-cluster-ip-service
            - name: urls__grpcDelivery
              value: delivery-cluster-ip-service:81
            - name: ConnectionString
              value: mongodb://mongo-cluster-ip-service
            - name: Database
              value: CouriersDb
            - name: EventBusConnection
              value: rabbitmq-cluster-ip-service
            - name: PATH_BASE
              value: /courier
            - name: ElasticUri
              value: elasticsearch-cluster-ip-service:9200
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: delivery-deployment
spec:
  replicas: 2
  selector:
    matchLabels:
      component: deliveryapi
  template:
    metadata:
      labels:
        component: deliveryapi
    spec:
      containers:
        - name: deliveryapi
          image: jamaxack/deliveryapi
          ports:
            - containerPort: 80
          env:
            - name: ASPNETCORE_ENVIRONMENT
              value: Development
            - name: ConnectionString
              value: Server=mssql-cluster-ip-service;Database=Kangaroo.Services.Delivery;User Id=sa;Password=Pass@word #TODO Create secret for password
            - name: EventBusConnection
              value: rabbitmq-cluster-ip-service
            - name: PATH_BASE
              value: /delivery
            - name: PORT
              value: "80"
            - name: GRPC_PORT
              value: "81"
            - name: ElasticUri
              value: elasticsearch-cluster-ip-service:9200
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: elasticsearch-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      component: elasticsearch
  template:
    metadata:
      labels:
        component: elasticsearch
    spec:
      volumes:
        - name: elasticsearch-storage
          persistentVolumeClaim:
            claimName: elasticsearch-persistent-volume-claim
      containers:
        - name: elasticsearch
          image: elasticsearch:7.7.1
          ports:
            - containerPort: 9200
          volumeMounts:
            - name: elasticsearch-storage
              mountPath: /usr/share/elasticsearch/data
          env:
            - name: "xpack.monitoring.enabled"
              value: "true"
            - name: "xpack.watcher.enabled"
              value: "false"
            - name: "ES_JAVA_OPTS"
              value: "-Xms512m -Xmx512m"
            - name: "discovery.type"
              value: "single-node"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kibana-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      component: kibana
  template:
    metadata:
      labels:
        component: kibana
    spec:
      containers:
        - name: kibana
          image: kibana:7.7.1
          ports:
            - containerPort: 5601
          env:
            - name: ELASTICSEARCH_URL
              value: elasticsearch-cluster-ip-service:9200
            - name: SERVER_BASEPATH
              value: /kibana
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      component: mongo
  template:
    metadata:
      labels:
        component: mongo
    spec:
      volumes:
        - name: mongo-storage
          persistentVolumeClaim:
            claimName: mongo-persistent-volume-claim
      containers:
        - name: mongo
          image: mongo
          ports:
            - containerPort: 27017
          volumeMounts:
            - name: mongo-storage
              mountPath: /data/db
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mssql-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      component: mssql
  template:
    metadata:
      labels:
        component: mssql
    spec:
      volumes:
        - name: mssql-storage
          persistentVolumeClaim:
            claimName: mssql-persistent-volume-claim
      containers:
        - name: mssql
          image: mcr.microsoft.com/mssql/server:2017-latest
          ports:
            - containerPort: 1433
          volumeMounts:
            - name: mssql-storage
              mountPath: /var/opt/mssql
          env:
            - name: SA_PASSWORD
              value: 'Pass@word' #TODO Create secret for password
            - name: ACCEPT_EULA
              value: 'Y'
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pricing-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      component: pricingapi
  template:
    metadata:
      labels:
        component: pricingapi
    spec:
      containers:
        - name: pricingapi
          image: jamaxack/pricingapi
          ports:
            - containerPort: 80
          env:
            - name: ASPNETCORE_ENVIRONMENT
              value: Development
            - name: ConnectionString
              value: redis-cluster-ip-service
            - name: PATH_BASE
              value: /pricing
            - name: ElasticUri
              value: elasticsearch-cluster-ip-service:9200
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      component: rabbitmq
  template:
    metadata:
      labels:
        component: rabbitmq
    spec:
      containers:
        - name: rabbitmq
          image: rabbitmq:3-management-alpine
          ports:
            - containerPort: 15672
            - containerPort: 5672
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      component: redis
  template:
    metadata:
      labels:
        component: redis
    spec:
      volumes:
        - name: redis-storage
          persistentVolumeClaim:
            claimName: redis-persistent-volume-claim
      containers:
        - name: redis
          image: redis:alpine
          ports:
            - containerPort: 6379
          volumeMounts:
            - name: redis-storage
              mountPath: /data


